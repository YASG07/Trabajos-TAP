/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package MisComponentes;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.Serializable;

/**
 *
 * @author yael_
 */
public class TextHora extends javax.swing.JPanel implements Serializable, FocusListener{

    private ComponentListener l;
    /**
     * Creates new form TextHora
     */
    public TextHora() {
        initComponents();
        txtHora.addFocusListener(this);
        txtHora.addComponentListener(l);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtHora = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        txtHora.setForeground(new java.awt.Color(153, 153, 153));
        txtHora.setText("hh:mm:ss");
        add(txtHora, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    public void iniciarListener(){
        if(l == null){
            l = new ComponentListener(){
                @Override
                public void componentResized(ComponentEvent e) {
                    TextHora TH = (TextHora)(e.getComponent());
                    int h = TH.getHeight();
                    if (h - TH.getHeight() >= 5)
                        TH.setFont(new Font("Segoi UI", Font.PLAIN, 14));
                    if(h - TH.getHeight() <= 5)
                        TH.setFont(new Font("Segoi UI", Font.PLAIN, 10));
                }

                @Override
                public void componentMoved(ComponentEvent e) {
                    
                }

                @Override
                public void componentShown(ComponentEvent e) {
                    
                }

                @Override
                public void componentHidden(ComponentEvent e) {
                    
                }
                
            };
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField txtHora;
    // End of variables declaration//GEN-END:variables

    @Override
    public void focusGained(FocusEvent e) {
        txtHora.setForeground(Color.black);
        txtHora.setText("");
    }

    @Override
    public void focusLost(FocusEvent e) {
        if(txtHora.getText().equals("")){
            txtHora.setForeground(Color.gray);
            txtHora.setText("hh:mm:ss");
        }//if
        else{
            String H[] = txtHora.getText().split(":");
            if(H.length != 3){
                txtHora.setForeground(Color.gray);
                txtHora.setText("hh:mm:ss");
            }//if
            int h = Integer.parseInt(H[0]), m = Integer.parseInt(H[0]), s = Integer.parseInt(H[0]);
            if(h < 0 || h > 23){
                txtHora.setForeground(Color.red);
                txtHora.setText("0-23:mm:ss");
            }//if
            if(m < 0 || m > 59){
                txtHora.setForeground(Color.red);
                txtHora.setText("hh:0-59:ss");
            }//if
            if(s < 0 || s > 59){
                txtHora.setForeground(Color.red);
                txtHora.setText("hh:mm:0-59");
            }//if
        }//else
    }
}
